(()=>{"use strict";const t="Xx*รท/",e=[document.getElementById("main-container"),document.getElementById("calculator-shell"),document.getElementById("display-window"),Array.from(document.querySelectorAll(".btn"))],r=document.getElementById("toggle-dark-mode"),i=document.getElementById("clear-button"),n=document.querySelectorAll(".btn__num"),s=document.querySelectorAll(".btn__operator"),u=document.getElementById("open-parenthesis"),a=document.getElementById("close-parenthesis"),h=document.getElementById("toggle-negative"),c=document.getElementById("percentage-button"),l=document.getElementById("pi-button"),o=document.getElementById("square-button"),g=document.getElementById("cube-button"),m=document.getElementById("custom-exponent-button"),d=document.getElementById("euler-button"),S=document.getElementById("factorial-button"),N=document.getElementById("inverse-fraction-button"),p=document.getElementById("euler-raised-button"),v=document.querySelectorAll(".btn__trig"),y=document.getElementById("display-text"),E=new class{equationStack;operatorsBeforeParentheses;currentNumString;numToDisplay;base;trig;equationStringHasReduced;overwriteCurrentNumString;clearAll;constructor(){this.equationStack=["+0"],this.operatorsBeforeParentheses=[],this.currentNumString="",this.numToDisplay="0",this.base="",this.trig="",this.equationStringHasReduced=!1,this.overwriteCurrentNumString=!1,this.clearAll=!1}handleNums(t){this.switchToClear(),this.overwriteCurrentNumString&&(this.currentNumString=this.giveDefaultOperator(this.currentNumString),this.currentNumString=this.currentNumString[0],this.overwriteCurrentNumString=!1),this.currentNumString=this.giveDefaultOperator(this.currentNumString),this.currentNumString=this.concatOrReplace(this.currentNumString,t),this.updateNumToDisplay(this.currentNumString)}handleOperators(t){(!this.base&&!this.trig||this.isValidNumString(this.currentNumString))&&(this.base&&this.solveCustomExponents(),this.trig&&this.handleTrig(),this.overwriteCurrentNumString&&(this.overwriteCurrentNumString=!1),"=Enter".includes(t)?this.handleEquals():(this.isValidNumString(this.currentNumString)?(this.currentNumString=this.giveDefaultOperator(this.currentNumString),this.currentNumString=this.currentNumString[0]+Number(this.currentNumString.slice(1)).toString(),this.reduceEquationString(t)):this.updateNumToDisplay(""),this.currentNumString=t))}concatOrReplace(t,e){return t.includes(".")&&"."===e||(2===t.length&&"0"===t[1]&&"."===e||1===t.length&&"."===e?t=`${t[0]}0.`:2===t.length&&"0"===t[1]?t=`${t[0]}${e}`:t+=e),t}giveDefaultOperator(t){return""!==t&&this.isOperator(t[0])||(t=`+${t}`),t}grabLastNum(t){let e,r=t.length-1;for(;r>=0;){if(this.isOperator(t[r]))return e=this.isOperator(t[r-1])?t.slice(r-1):t.slice(r),e;r-=1}return e}grabLastStringInStack(t){return t[t.length-1]}isOperator(t){return"+รท-xX/*=Enter".includes(t)}updateNumToDisplay(t){0===t.length&&(t=this.grabLastNum(this.grabLastStringInStack(this.equationStack)));const e=t[0];this.isOperator(e)&&(t=t.slice(1)),this.numToDisplay=t}handlePercentage(t){return math.chain(t).divide(100)}handlePi(){const t=this.giveDefaultOperator(this.currentNumString)[0],e=math.pi.toString();this.currentNumString=t+e,this.updateNumToDisplay(this.currentNumString),this.overwriteCurrentNumString=!0}handleEuler(){const t=this.giveDefaultOperator(this.currentNumString)[0],e=math.e.toString();this.currentNumString=t+e,this.updateNumToDisplay(this.currentNumString),this.overwriteCurrentNumString=!0}handleRaiseEuler(){this.handleEuler(),this.base=this.currentNumString}handleSquared(t){return math.pow(t,2)}handleCubed(t){return math.pow(t,3)}handleFactorial(t){return math.factorial(t)}handleInverseFraction(t){return math.chain(100).divide(t).divide(100)}setBase(){this.base=this.currentNumString,this.currentNumString=""}solveCustomExponents(){const t=this.base[0],e=math.pow(Number(this.base.slice(1)),Number(this.currentNumString)).toString();this.currentNumString=t+e,this.base=""}determineTrigFunction(t){this.trig=t}handleTrig(){let t;const e=this.currentNumString[0],r=Number(this.currentNumString.slice(1));t="sin"===this.trig?math.sin(r):"cos"===this.trig?math.cos(r):math.tan(r),t=e+t.toString(),this.trig="",this.currentNumString=t}handleOpenParenthesis(){if(this.base)return!1;const t=this.determineStoredOperator(this.currentNumString);return this.operatorsBeforeParentheses.push(t),this.isValidNumString(this.currentNumString)&&(this.currentNumString=this.giveDefaultOperator(this.currentNumString),this.equationStack[this.equationStack.length-1]+=this.currentNumString),this.equationStack.push("+0"),this.currentNumString="",this.equationStringHasReduced=!1,!0}handleCloseParenthesis(){if(0===this.operatorsBeforeParentheses.length)return!1;this.isValidNumString(this.currentNumString)||(this.currentNumString=this.fixInvalidNumString(this.currentNumString)),this.currentNumString=this.giveDefaultOperator(this.currentNumString),this.reduceEquationString("=");const t=this.equationStack.pop(),e=this.operatorsBeforeParentheses.pop();return this.currentNumString=this.replaceOperator(t,e),this.overwriteCurrentNumString=!0,!0}makePosOrNeg(t){return 0===t?t:t<0?math.abs(t):0-t}handleEquals(){if(this.equationStack.length>1)for(;this.operatorsBeforeParentheses.length>0;)this.handleCloseParenthesis();this.isValidNumString(this.giveDefaultOperator(this.currentNumString))||(this.currentNumString=this.fixInvalidNumString(this.currentNumString)),this.reduceEquationString("="),this.currentNumString=this.equationStack[0],this.equationStack[0]="+0",this.switchToClear(),this.equationStringHasReduced=!1,this.overwriteCurrentNumString=!0}reduceEquationString(t){let e=this.currentNumString[0],r=this.grabLastStringInStack(this.equationStack);for(this.equationStringHasReduced||(this.equationStringHasReduced=!0);0!==r.length&&!this.isHigherOrder(e,t);){const t=this.grabLastNum(r),i=t[0],n=t.slice(1);r=this.cutFromNumString(r,t.length),this.equationStack[this.equationStack.length-1]=r;const s=Number(n),u=Number(this.currentNumString.slice(1)),a=this.calculate(s,u,e);this.currentNumString=`${i}${a.toString()}`,e=i}this.currentNumString=this.giveDefaultOperator(this.currentNumString),this.equationStack[this.equationStack.length-1]+=this.currentNumString,this.updateNumToDisplay(this.currentNumString)}calculate(t,e,r){let i;return i="+"===r?math.chain(t).add(e).done():"-"===r?math.chain(t).subtract(e).done():"*"===r||"x"===r||"X"===r?math.chain(t).multiply(e).done():math.chain(t).divide(e).done(),i}clear(){(this.isValidNumString(this.currentNumString)||"+0"!==this.equationStack[0]||1!==this.equationStack.length||this.trig||this.base)&&(this.isValidNumString(this.currentNumString)?"+0"!==this.equationStack[0]||this.equationStack.length>1?(this.currentNumString=this.giveDefaultOperator(this.currentNumString)[0],this.switchToAllClear()):this.currentNumString="":(this.currentNumString="",this.switchToAllClear()),this.updateNumToDisplay("0"))}switchToAllClear(){this.clearAll=!0}switchToClear(){this.clearAll=!1}allClear(){this.currentNumString="",this.equationStack.length=0,this.equationStack.push("+0"),this.base="",this.trig="",this.updateNumToDisplay(this.currentNumString),this.switchToClear(),this.equationStringHasReduced=!1}updateNumStringInPlace(t){if(!this.isValidNumString(this.currentNumString)){const t=this.grabLastNum(this.grabLastStringInStack(this.equationStack));this.equationStack[this.equationStack.length-1]=this.cutFromNumString(this.grabLastStringInStack(this.equationStack),t.length),this.currentNumString=t}const e=this.currentNumString[0],r=t(Number(this.removeOperator(this.currentNumString))).toString();this.currentNumString=e+r,this.updateNumToDisplay(this.currentNumString),this.overwriteCurrentNumString=!0}isValidNumString(t){return!(0===t.length||1===t.length&&this.isOperator(t))}fixInvalidNumString(e){const r=this.giveDefaultOperator(e)[0];return t.includes(r)?`${r}1`:`${r}0`}cutFromNumString(t,e){const r=t.length-e;return t.slice(0,r)}isDigit(t){return"0123456789.".includes(t)}isHigherOrder(e,r){return"+-".includes(e)&&t.includes(r)}determineStoredOperator(t){let e;return e=0!==t.length||this.equationStringHasReduced?1!==t.length||this.isValidNumString(t)?"*":t:"+",e}replaceOperator(t,e){return`${e}${t.slice(1)}`}removeOperator(t){return t.slice(1)}};function k(t){y.value=" ",setTimeout((()=>{y.value=t}),30)}function b(t){t.classList.add("key-pressed"),setTimeout((()=>{t.classList.remove("key-pressed")}),150)}function q(t){t.forEach((t=>{t.constructor===Array?q(t):t.classList.toggle("dark")}))}r.addEventListener("click",(()=>{q(e)})),n.forEach((t=>{t.addEventListener("click",(t=>{E.handleNums(t.target.innerText),b(t.target),k(E.numToDisplay)}))})),h.addEventListener("click",(t=>{E.updateNumStringInPlace(E.makePosOrNeg),b(t.target),k(E.numToDisplay)})),s.forEach((t=>{t.addEventListener("click",(t=>{E.handleOperators(t.target.innerText),b(t.target),k(E.numToDisplay)}))})),i.addEventListener("click",(t=>{E.clearAll?(E.allClear(),t.target.innerText="C"):(E.clear(),E.clearAll&&(t.target.innerText="A/C")),b(t.target),k(E.numToDisplay)})),u.addEventListener("click",(t=>{E.handleOpenParenthesis()&&b(t.target)})),a.addEventListener("click",(t=>{E.handleCloseParenthesis()&&(b(t.target),k(E.numToDisplay))})),c.addEventListener("click",(t=>{E.updateNumStringInPlace(E.handlePercentage),b(t.target),k(E.numToDisplay)})),l.addEventListener("click",(t=>{E.handlePi(),b(t.target),k(E.numToDisplay)})),d.addEventListener("click",(t=>{E.handleEuler(),b(t.target),k(E.numToDisplay)})),p.addEventListener("click",(t=>{E.base||(E.handleRaiseEuler(),b(t.target),k(E.numToDisplay))})),o.addEventListener("click",(t=>{E.updateNumStringInPlace(E.handleSquared),b(t.target),k(E.numToDisplay)})),g.addEventListener("click",(t=>{E.updateNumStringInPlace(E.handleCubed),b(t.target),k(E.numToDisplay)})),S.addEventListener("click",(t=>{E.updateNumStringInPlace(E.handleFactorial),b(t.target),k(E.numToDisplay)})),N.addEventListener("click",(t=>{E.updateNumStringInPlace(E.handleInverseFraction),b(t.target),k(E.numToDisplay)})),m.addEventListener("click",(t=>{E.base||E.isValidNumString(E.currentNumString)&&(E.setBase(),b(t.target),k(E.numToDisplay))})),v.forEach((t=>{t.addEventListener("click",(t=>{E.determineTrigFunction(t.target.getAttribute("id")),b(t.target)}))}))})();